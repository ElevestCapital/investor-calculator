---

const data = Astro.props.data
const maxValue = `numberToPrice(years()[30].${data})`
const value = `numberToPrice(year.${data})`

function accordion(){
  return {
    open: false,
    toggle(){
      this.open = !this.open
    }
  }
}
---

<div class="accordion">
  <div>
    <div class="accordion-toggle">
      {Astro.props.title}
    </div>
  </div>
  <div class="accordion-content" :class="{'open': open}" >
    <template x-for="(year, i) in selectedYears">
      <div class="accordion-item">
        <span x-text="'Year ' + year.number"></span>
        <div>
        $ <span x-text={value}></span>
        </div>
      </div>
    </template>
  </div>
</div>

<style>
  
.accordion {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  border: 1px solid var(--color-teal-dark);
  border-radius: 1rem;
  padding: 1.5rem;
  height: fit-content;
  background-color: var(--color-neutral-light);
  z-index: 3;
  cursor: pointer;
  transition: var(--transition);
  transition-duration: 0.1;
  width: fit-content;
  margin-left: auto;

  @media (max-width: 1200px) {
    flex-direction: column;
    width: 100%;
    gap: 1rem;
  }
}

.open {
  transition: var(--transition);
  height: 18em !important;
}

.accordion-toggle {
  width: 100%;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  font-weight: bold;
}

.accordion-pricing {
  font-size: 2rem;
}

.accordion-title {
  display: flex;
  justify-content: space-between;
  margin-bottom: 0.5rem;
}

.accordion-content {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  overflow: hidden;
  height: 0px;
  transition: all 0.2s ease-in-out;
}

.accordion-item {
  display: flex;
  justify-content: space-between;
}


</style>